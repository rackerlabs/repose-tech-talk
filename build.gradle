buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath 'com.bmuschko:gradle-docker-plugin:3.0.6'
    }
}

apply plugin: 'com.bmuschko.docker-remote-api'

import com.bmuschko.gradle.docker.tasks.container.*
import com.bmuschko.gradle.docker.tasks.image.*

File dockerDir = file("$buildDir/docker")

task copyFiles {

    doLast {
        dockerDir.mkdirs()

        copy {
            from "$projectDir/src/docker"
            into dockerDir
        }

        copy {
            from "$projectDir/src/scripts"
            into "$dockerDir/scripts"
        }

        copy {
            from "$projectDir/src/fake-services"
            into "$dockerDir/fake-services"
        }
    }
}

task buildLogDirectory {
    doLast {
        file("$buildDir/logs").mkdirs()
    }
}

task buildDemoImage(type: DockerBuildImage) {
    dependsOn copyFiles
    inputDir = dockerDir
    tag = 'repose/demo'
}

task createDemoContainer(type: DockerCreateContainer) {
    dependsOn buildDemoImage, buildLogDirectory
    targetImageId { buildDemoImage.getImageId() }
    portBindings = ['8080:8080']
    binds = ["$projectDir/src/configs":"/etc/repose", "$buildDir/logs":"/var/log/repose"]
}

task startDemoContainer(type: DockerStartContainer) {
    dependsOn createDemoContainer
    targetContainerId { createDemoContainer.getContainerId() }
}
